How did viewing a diff between two versions of a file help you to see the bug that was introduced?
It helped me to quickly find only the lines that were different, rather than searching through the whole source code line by line.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It can help you to "undo" things quickly and easily by being able to go back as far as you want. You can also compare very old code to see why the new code works better or not as well.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: each commit has complete code, you can choose how much gets changed between commits, you can label each commit.
Cons: you may forget to commit sometimes, it can be time consuming

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Saving multiple files is more geared towards developing, where multiple files must be used in tandem with each other. Google Docs is more geared towards storing files that are independent of each other, therefore it would be impractical to commit more than one file at once.

How can you use the commands git log and git diff to view the history of files?
Use git log to see the commits in the repository. Git diff allows you to see the difference in two files.

How might using version control make you more confident to make changes that could break something?
You know that if you break something you can always go back to the previous version.